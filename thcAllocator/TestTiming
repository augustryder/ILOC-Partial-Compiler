#!/bin/bash
#
# This script runs all of the ILOC files in the current directory (./*.i)
# through a register allocator; runs the resulting code through the ILOC
# simulator; checks the output values against the specifications provided
# in the comments of the original ILOC file; and reports both correctness
# and the number of cycles required to execute the allocated code.
#
# usage: AllocAndRunAll <directory> <allocator> <k>
#
# where k is the number of registers to be passed to the allocator, default 5
# 
#
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
CHECK=$SCRIPT_DIR/tools/CheckTiming
SIM=$SCRIPT_DIR/tools/sim
RUN=$SCRIPT_DIR/tools/AllocTiming
LOG=$SCRIPT_DIR/tools/TimingTest.log
if [ $# -lt 2 ]; then
    echo "Usage: TestTiming <allocator> <directory>"
    echo "Where <allocator> points to your allocator,"
    echo '  <directory> points to a directory of test files.'
    exit
fi
ALLOC=$1
DIR=$2
NREGS=${3:-5}
echo $(basename $( pwd ))
echo "-----" >&$LOG
FLIST=$(ls $DIR/*.i)

for f in $(ls $DIR/*.i); do
    $RUN $f $ALLOC $SIM 3 4 8 12 16 20 >> $LOG
    #echo $RUN $f $ALLOC $NREGS $SIM 
    echo "-----" >> $LOG
done


$CHECK $LOG 6
rm /tmp/test.i
